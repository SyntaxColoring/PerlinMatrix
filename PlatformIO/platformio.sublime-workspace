{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"tip",
				"tip_rack"
			],
			[
				"protoco",
				"protocol_context"
			],
			[
				"hold_",
				"hold_time_minutes"
			],
			[
				"location",
				"location_south_of_fixed_trash"
			],
			[
				"_get_north",
				"_get_north_south_locations"
			],
			[
				"_get_east",
				"_get_east_west_locations"
			],
			[
				"get_",
				"get_quirks"
			],
			[
				"_is_",
				"_is_fixed_trash"
			],
			[
				"source",
				"source_location"
			],
			[
				"summ",
				"summary_from_store"
			],
			[
				"step_",
				"step_index_to_cancel_after"
			],
			[
				"hold_time",
				"hold_time_minutes"
			],
			[
				"execut",
				"execution_manager"
			],
			[
				"cycle_t",
				"cycle_temperatures_task"
			],
			[
				"set_",
				"set_target_lid_temperature"
			],
			[
				"Async",
				"AsyncGenerator"
			],
			[
				"Not",
				"NotImplementedError"
			],
			[
				"hold",
				"hold_time_seconds"
			],
			[
				"load",
				"load_labware"
			],
			[
				"the",
				"then_return"
			],
			[
				"current",
				"current_position"
			],
			[
				"input_",
				"input_minimum_z_height"
			],
			[
				"get_movement",
				"get_movement_waypoints_to_coords"
			],
			[
				"Moun",
				"MountType"
			],
			[
				"Loaded",
				"LoadedPipette"
			],
			[
				"Move",
				"MoveToCoordinatesImplementation"
			],
			[
				"all_lab",
				"all_labware_highest_z"
			],
			[
				"criti",
				"critical_point"
			],
			[
				"all",
				"all_labware_highest_z"
			],
			[
				"MoveToCoordin",
				"MoveToCoordinatesResult"
			],
			[
				"move_to_",
				"move_to_coordinates"
			],
			[
				"pipette",
				"pipette_id"
			],
			[
				"MoveToCoordinates",
				"MoveToCoordinatesResult"
			],
			[
				"NOt",
				"NotImplementedError"
			],
			[
				"Deck",
				"DeckPoint"
			],
			[
				"DispenseInPlace",
				"DispenseInPlaceCommandType"
			],
			[
				"aspir",
				"aspirate_in_place"
			],
			[
				"altern",
				"alternative_name"
			],
			[
				"octets_",
				"octets_available_for_base_name"
			],
			[
				"MAXIM",
				"SERVICE_NAME_MAXIMUM_OCTETS"
			],
			[
				"trunc",
				"truncated_base_name"
			],
			[
				"octets",
				"octets_available_for_base_name"
			],
			[
				"alternati",
				"alternative_service_name"
			],
			[
				"Avahi",
				"AvahiClient"
			],
			[
				"Ava",
				"AvahiClient"
			],
			[
				"then",
				"then_return"
			],
			[
				"name_",
				"name_synchronizer"
			],
			[
				"collision",
				"collision_callback_captor"
			],
			[
				"name",
				"name_synchronizer"
			],
			[
				"mock",
				"mock_get_pretty_hostname"
			],
			[
				"monker",
				"monkeypatch_get_pretty_hostname"
			],
			[
				"avahi",
				"avahi_entry_group_collision"
			],
			[
				"opent",
				"opentrons_96_tiprack_300ul"
			],
			[
				"alternative",
				"alternative_service_name"
			],
			[
				"AvahiClient",
				"_SyncAvahiClientInterface"
			],
			[
				"__",
				"__future__"
			],
			[
				"mock_",
				"mock_name_manager"
			],
			[
				"an",
				"anydict"
			],
			[
				"loadL",
				"load_labware_command_id"
			],
			[
				"p300",
				"p300_multi_gen2"
			],
			[
				"any",
				"anydict"
			],
			[
				"num_",
				"num_protocols"
			],
			[
				"_PROTO",
				"_PROTOCOLS_TO_EXPECT"
			],
			[
				"_PROTOCOLS_",
				"_PROTOCOLS_TO_UPLOAD"
			],
			[
				"_maximum",
				"_maximum_unused_protocols"
			],
			[
				"num",
				"num_unused_protocols_after_new_addition"
			],
			[
				"existing",
				"existing_protocols"
			],
			[
				"plan_for_",
				"plan_for_new_protocol"
			],
			[
				"maximum_",
				"maximum_unused_protocols"
			],
			[
				"_protoco",
				"_protocol_deletion_test_specs"
			],
			[
				"_Pr",
				"_ProtocolInfo"
			],
			[
				"expec",
				"expected_deletion_plan"
			],
			[
				"plan",
				"plan_for_new_run"
			],
			[
				"_",
				"_run_test_specs"
			],
			[
				"is_u",
				"is_used_by_run"
			],
			[
				"protocol",
				"protocol_resource_2"
			],
			[
				"mock_run_",
				"mock_run_auto_deleter"
			],
			[
				"delet",
				"deletion_planner"
			],
			[
				"Protoc",
				"ProtocolNotFoundError"
			],
			[
				"runs",
				"runs_to_delete"
			],
			[
				"_MAX",
				"_MAXIMUM_RUNS"
			],
			[
				"max",
				"maximum_runs"
			],
			[
				"_MAXIMUM",
				"_MAXIMUM_PROTOCOLS"
			],
			[
				"maximum",
				"maximum_protocols"
			],
			[
				"Deletion",
				"DeletionPlan"
			],
			[
				"Run",
				"RunSpec"
			],
			[
				"analysis",
				"analysis-id-4"
			],
			[
				"analys",
				"analysis-id-1"
			],
			[
				"completed_",
				"completed_analysis"
			],
			[
				"completed",
				"completed_analysis"
			],
			[
				"completed_anal",
				"completed_analysis_resource"
			],
			[
				"raise",
				"raise_for_status"
			],
			[
				"analyses_by_p",
				"analyses_by_protocol_id"
			],
			[
				"analyes",
				"analyses_on_this_protocol"
			],
			[
				"analyses_by_pr",
				"analyses_by_protocol_id"
			],
			[
				"analy",
				"analyses_by_protocol"
			],
			[
				"uploade",
				"uploaded_protocol_ids"
			],
			[
				"anal",
				"analyses_id"
			],
			[
				"upl",
				"uploaded_protocol"
			],
			[
				"_Compl",
				"_CompletedAnalysisStore"
			],
			[
				"_analysis_ids",
				"_analysis_ids_by_protocol_id"
			],
			[
				"_Complet",
				"_CompletedAnalysisResource"
			],
			[
				"pending",
				"pending_analysis"
			],
			[
				"protoc",
				"protocol_id"
			],
			[
				"get_by_",
				"get_by_protocol"
			],
			[
				"AnalysisNot",
				"AnalysisNotPendingOrNotFoundError"
			],
			[
				"_by_",
				"_by_protocol_id"
			],
			[
				"_sql_get_by",
				"_sql_get_by_id"
			],
			[
				"pendini",
				"pending_analysis"
			],
			[
				"pendinig",
				"pending_analysis"
			],
			[
				"_re",
				"_rewrite_machine_info_contents"
			],
			[
				"string",
				"string_to_quote"
			],
			[
				"code",
				"code_points"
			],
			[
				"Completed",
				"CompletedAnalysis"
			],
			[
				"_get_protoco",
				"_get_protocol_of_pending_analysis"
			],
			[
				"_pending_",
				"_pending_to_summary"
			],
			[
				"Analy",
				"AnalysisSummary"
			],
			[
				"ProtocolNot",
				"ProtocolNotFoundError"
			],
			[
				"complete",
				"completed_analysis_ids"
			],
			[
				"compl",
				"completed_analysis_resource"
			],
			[
				"complet",
				"completed_analysis"
			],
			[
				"completed_analysis_resou",
				"completed_analysis_resource"
			],
			[
				"all_compl",
				"all_completed_ids"
			],
			[
				"proto",
				"protocol_id"
			],
			[
				"_Comple",
				"_CompletedAnalysisResource"
			],
			[
				"Pending",
				"PendingAnalysis"
			],
			[
				"existing_analys",
				"existing_analysis_id"
			],
			[
				"prot",
				"protocol_id"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/main.cpp",
			"settings":
			{
				"buffer_size": 461,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "/*"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAA1wEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAANcBAAAAAAAA2AEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wEAAAAAAADXAQAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"reindent",
					{
						"single_line": false
					},
					"CgAAALQAAAAAAAAAtQAAAAAAAAAAAAAAsgAAAAAAAACyAAAAAAAAAAIAAAAgIBUBAAAAAAAAFgEAAAAAAAAAAAAAEwEAAAAAAAATAQAAAAAAAAIAAAAgIE4BAAAAAAAATwEAAAAAAAAAAAAATAEAAAAAAABMAQAAAAAAAAIAAAAgIIwBAAAAAAAAjQEAAAAAAAAAAAAAigEAAAAAAACKAQAAAAAAAAIAAAAgIMUBAAAAAAAAxgEAAAAAAAAAAAAAwwEAAAAAAADDAQAAAAAAAAIAAAAgIA",
					"AQAAAAAAAAABAAAAAAAAAAAAAADYAQAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					2,
					"left_delete",
					null,
					"AgAAAOMAAAAAAAAA4wAAAAAAAAABAAAAIOIAAAAAAAAA4gAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA5AAAAAAAAADkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAOIAAAAAAAAA4wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4gAAAAAAAADiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					3,
					"left_delete",
					null,
					"AwAAADUBAAAAAAAANQEAAAAAAAABAAAAIDQBAAAAAAAANAEAAAAAAAABAAAAIDMBAAAAAAAAMwEAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAANgEAAAAAAAA2AQAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADMBAAAAAAAANAEAAAAAAAAAAAAANAEAAAAAAAA1AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwEAAAAAAAAzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"unexpand_tabs",
					{
						"set_translate_tabs": true
					},
					"AQAAAAAAAAAAAAAAzgEAAAAAAADRAQAALyoKICogQmxpbmsKICogVHVybnMgb24gYW4gTEVEIG9uIGZvciBvbmUgc2Vjb25kLAogKiB0aGVuIG9mZiBmb3Igb25lIHNlY29uZCwgcmVwZWF0ZWRseS4KICovCgojaW5jbHVkZSA8QXJkdWluby5oPgoKdm9pZCBzZXR1cCgpCnsKICAvLyBpbml0aWFsaXplIExFRCBkaWdpdGFsIHBpbiBhcyBhbiBvdXRwdXQuCglwaW5Nb2RlKExFRF9CVUlMVElOLCBPVVRQVVQpOwp9Cgp2b2lkIGxvb3AoKQp7CgkvLyB0dXJuIHRoZSBMRUQgb24gKEhJR0ggaXMgdGhlIHZvbHRhZ2UgbGV2ZWwpCglkaWdpdGFsV3JpdGUoTEVEX0JVSUxUSU4sIEhJR0gpOwoJLy8gd2FpdCBmb3IgYSBzZWNvbmQKCWRlbGF5KDEwMDApOwogIC8vIHR1cm4gdGhlIExFRCBvZmYgYnkgbWFraW5nIHRoZSB2b2x0YWdlIExPVwoJZGlnaXRhbFdyaXRlKExFRF9CVUlMVElOLCBMT1cpOwogICAvLyB3YWl0IGZvciBhIHNlY29uZAoJZGVsYXkoMTAwMCk7Cn0K",
					"AQAAAAAAAAABAAAAAAAAAAAAAADRAQAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"left_delete",
					null,
					"AQAAAKgBAAAAAAAAqAEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAqQEAAAAAAACpAQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "platformio.sublime-project",
			"settings":
			{
				"buffer_size": 2068,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "PlatformIO",
	"build_system_choices":
	[
		[
			[
				[
					"PlatformIO",
					""
				],
				[
					"PlatformIO",
					"Build"
				],
				[
					"PlatformIO",
					"Upload"
				],
				[
					"PlatformIO",
					"Clean"
				],
				[
					"PlatformIO",
					"Test"
				],
				[
					"PlatformIO",
					"Upload SPIFFS image"
				],
				[
					"PlatformIO",
					"Update platforms and libraries"
				],
				[
					"PlatformIO",
					"Upgrade PlatformIO Core"
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"PlatformIO",
				"Build"
			]
		]
	],
	"build_varint": "Build",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"convert",
				"Indentation: Convert to Tabs"
			],
			[
				"reindent",
				"Indentation: Reindent Lines"
			],
			[
				"spaces",
				"Indentation: Convert to Spaces"
			],
			[
				"json",
				"JSON Reindent: reindent file or selection"
			],
			[
				"color sc",
				"UI: Select Color Scheme"
			],
			[
				"diff h",
				"History: Toggle Inline Diff"
			],
			[
				"arit",
				"Arithmetic"
			],
			[
				"close all",
				"File: Close All"
			],
			[
				"save a",
				"File: Save All"
			],
			[
				"save all",
				"File: Save All"
			],
			[
				"clor  schem",
				"UI: Select Color Scheme"
			],
			[
				"markdown",
				"Set Syntax: Markdown"
			],
			[
				"distra",
				"View: Toggle Distraction Free"
			],
			[
				"wrap",
				"Wrap at Ruler"
			],
			[
				"distract",
				"View: Toggle Distraction Free"
			],
			[
				"color schem",
				"UI: Select Color Scheme"
			],
			[
				"color",
				"UI: Select Color Scheme"
			],
			[
				"indent",
				"Indentation: Convert to Spaces"
			],
			[
				"sort",
				"Sort Lines"
			],
			[
				"custom",
				"UI: Customize Color Scheme"
			],
			[
				"diff",
				"History: Toggle Inline Diff"
			],
			[
				"arith",
				"Arithmetic"
			],
			[
				"ar",
				"Arithmetic"
			],
			[
				"a",
				"Arithmetic"
			],
			[
				"upper",
				"Convert Case: Upper Case"
			],
			[
				"tabs",
				"Indentation: Convert to Tabs"
			],
			[
				"tab",
				"View: Toggle Tabs"
			],
			[
				"rename",
				"Rename File"
			],
			[
				"reinden",
				"Indentation: Reindent Lines"
			],
			[
				"python",
				"Set Syntax: Python"
			],
			[
				"github",
				"GitHubinator"
			],
			[
				"color sch",
				"UI: Select Color Scheme"
			],
			[
				"theme",
				"UI: Select Theme"
			],
			[
				"new build",
				"Build: New Build System"
			],
			[
				"make lint",
				"Build With: make lint"
			],
			[
				"reind",
				"Indentation: Reindent Lines"
			],
			[
				"j",
				"JSON Reindent: reindent file or selection"
			],
			[
				"naomi",
				"Set Syntax: JavaScript (Naomi)"
			],
			[
				"package",
				"Package Control: Remove Package"
			],
			[
				"package ",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"react",
				"Set Syntax: TypeScriptReact"
			],
			[
				"upp",
				"Convert Case: Upper Case"
			],
			[
				"upperca",
				"Convert Case: Upper Case"
			],
			[
				"snippet",
				"Snippet: __magic__"
			],
			[
				"ari",
				"Arithmetic"
			],
			[
				"lowerc",
				"Convert Case: Lower Case"
			],
			[
				"arithm",
				"Arithmetic"
			],
			[
				"package c",
				"Package Control: Install Package"
			],
			[
				"space",
				"Indentation: Convert to Spaces"
			],
			[
				"case sens",
				"Sort Lines (Case Sensitive)"
			],
			[
				"convert to ta",
				"Indentation: Convert to Tabs"
			],
			[
				"t",
				"View: Toggle Tabs"
			],
			[
				"make clean",
				"Build With: Make - Clean"
			],
			[
				"make",
				"Build With: Make - Clean"
			],
			[
				"wra",
				"Word Wrap: Toggle"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"word ",
				"Word Wrap: Toggle"
			],
			[
				"sidebar",
				"View: Toggle Side Bar"
			],
			[
				"rein",
				"Indentation: Reindent Lines"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 321.0,
		"history":
		[
			"len(\"Repurpose Startup.s to set up a C runtime environment, which currentl\")",
			"len(Repurpose Startup.s to set up a C runtime environment, which currentl)",
			"ls"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/maxpm/Code/PerlinMatrix/PlatformIO",
		"/Users/maxpm/Code/PerlinMatrix/PlatformIO/src",
		"/Users/maxpm/Code/PerlinMatrix/PlatformIO/test"
	],
	"file_history":
	[
		"/Users/maxpm/Code/Opentrons/opentrons/robot-server/robot_server/runs/run_models.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_engine/execution/heater_shaker_restriction_flagger.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_engine/state/modules.py",
		"/Users/maxpm/.Brewfile",
		"/Users/maxpm/Code/Opentrons/opentrons/scripts/push.mk",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_engine/types.py",
		"/Users/maxpm/Code/Opentrons/opentrons/shared-data/labware/definitions/1/fixed-trash.json",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocols/geometry/module_geometry.py",
		"/Users/maxpm/Code/Opentrons/opentrons/shared-data/labware/schemas/2.json",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_engine/commands/command.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_engine/state/commands.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/tests/opentrons/protocols/geometry/test_deck_conflict.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocols/geometry/deck.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_api/instrument_context.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocols/api_support/instrument.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocols/geometry/deck_conflict.py",
		"/Users/maxpm/Desktop/hs_trash_conflict_test.py",
		"/Users/maxpm/Desktop/home_bug_repro.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_runner/json_command_translator.py",
		"/Users/maxpm/Code/Opentrons/opentrons/shared-data/protocol/schemas/6.json",
		"/Users/maxpm/Code/Opentrons/opentrons/robot-server/tests/integration/http_api/protocols/test_auto_deletion.py",
		"/Users/maxpm/Code/Opentrons/opentrons/robot-server/tests/runs/test_run_data_manager.py",
		"/Users/maxpm/Desktop/short_protocol.py",
		"/Users/maxpm/Code/Opentrons/opentrons/robot-server/robot_server/runs/run_store.py",
		"/Users/maxpm/Code/Opentrons/opentrons/robot-server/robot_server/persistence/tables.py",
		"/Users/maxpm/Code/Opentrons/opentrons/robot-server/robot_server/service/session/manager.py",
		"/Users/maxpm/Code/Opentrons/opentrons/robot-server/robot_server/protocols/protocol_store.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/config/feature_flags.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_api/protocol_context.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocols/api_support/util.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocols/api_support/types.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/docs/v2/versioning.rst",
		"/Users/maxpm/Desktop/tc_pause_test.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_engine/execution/hardware_event_forwarder.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_engine/protocol_engine.py",
		"/Users/maxpm/Code/Opentrons/opentrons/robot-server/tests/integration/robot_client.py",
		"/Users/maxpm/Code/Opentrons/opentrons/robot-server/robot_server/runs/router/base_router.py",
		"/Users/maxpm/Code/Opentrons/opentrons/robot-server/robot_server/service/json_api/response.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_engine/execution/queue_worker.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocols/context/labware.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocols/geometry/deck_item.py",
		"/Users/maxpm/Code/Opentrons/opentrons/shared-data/labware/definitions/2/opentrons_96_tiprack_1000ul/1.json",
		"/Users/maxpm/Code/Opentrons/opentrons/api/tests/opentrons/conftest.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/hardware_control/modules/heater_shaker.py",
		"/Users/maxpm/Code/Opentrons/opentrons/robot-server/robot_server/runs/run_data_manager.py",
		"/Users/maxpm/Code/Opentrons/opentrons/robot-server/robot_server/persistence/database.py",
		"/Users/maxpm/Code/Opentrons/opentrons/robot-server/tests/protocols/test_analysis_store.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_engine/commands/load_module.py",
		"/Users/maxpm/Code/Opentrons/opentrons/robot-server/robot_server/persistence/utc_datetime.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_api/module_contexts.py",
		"/Users/maxpm/Code/Opentrons/opentrons/robot-server/robot_server/persistence/migrations.py",
		"/Users/maxpm/Code/Opentrons/opentrons/robot-server/robot_server/persistence/__init__.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_engine/state/state_summary.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_runner/protocol_runner.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/tests/opentrons/hardware_control/integration/test_thermocycler.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/hardware_control/modules/thermocycler.py",
		"/Users/maxpm/Code/Opentrons/opentrons/robot-server/tests/protocols/test_protocol_analyzer.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/hardware_control/execution_manager.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/hardware_control/emulation/simulations.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/hardware_control/poller.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/hardware_control/modules/mod_abc.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/tests/opentrons/hardware_control/modules/test_hc_thermocycler.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/mypy.ini",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/hardware_control/emulation/scripts/run_app.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/hardware_control/emulation/scripts/run_module_emulator.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/hardware_control/emulation/app.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/hardware_control/emulation/proxy.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/tests/opentrons/hardware_control/integration/test_thermocycler_pauses.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/tests/opentrons/hardware_control/integration/conftest.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/hardware_control/emulation/thermocycler.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/hardware_control/simulator_setup.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/hardware_control/emulation/settings.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/commands/types.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/hardware_control/emulation/module_server/client.py",
		"/Users/maxpm/Desktop/pause_bonanza.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_engine/commands/load_labware.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_engine/commands/move_to_well.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_engine/commands/pipetting_common.py",
		"/Users/maxpm/Code/Opentrons/opentrons/shared-data/protocol/types/schemaV6/command/setup.ts",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_engine/commands/load_pipette.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_engine/execution/pipetting.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/types.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_engine/commands/move_to_coordinates.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/motion_planning/waypoints.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/tests/opentrons/protocol_engine/commands/test_move_to_coordinates.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/tests/opentrons/protocol_engine/state/test_motion_view.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_engine/commands/drop_tip.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_engine/state/motion.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_engine/state/geometry.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_engine/commands/home.py",
		"/Users/maxpm/Code/Opentrons/opentrons/robot-server/tests/integration/protocols/simple_v6.json",
		"/Users/maxpm/Code/Opentrons/opentrons/shared-data/protocol/fixtures/6/simpleV6.json",
		"/Users/maxpm/Code/Opentrons/opentrons/api/tests/opentrons/protocol_engine/state/test_pipette_store.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_engine/execution/movement.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_engine/state/pipettes.py",
		"/Users/maxpm/Code/Opentrons/opentrons/robot-server/tests/integration/http_api/protocols/test_persistence.py",
		"/Users/maxpm/Code/Opentrons/opentrons/robot-server/robot_server/runs/run_auto_deleter.py",
		"/Users/maxpm/Code/Opentrons/opentrons/robot-server/robot_server/deletion_planner.py",
		"/Users/maxpm/Code/Opentrons/opentrons/robot-server/tests/integration/http_api/protocols/test_v6_json_upload.tavern.yaml",
		"/Users/maxpm/Code/Opentrons/opentrons/api/tests/opentrons/protocol_engine/state/command_fixtures.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/tests/opentrons/protocol_engine/state/test_pipette_view.py",
		"/Users/maxpm/Desktop/UI feedback.txt",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_runner/legacy_command_mapper.py",
		"/Users/maxpm/Desktop/makes_big_response.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_engine/actions/action_dispatcher.py",
		"/Users/maxpm/Desktop/Perf notes.txt",
		"/Users/maxpm/Desktop/hs_labware.py",
		"/Users/maxpm/Code/Opentrons/opentrons/robot-server/robot_server/runs/router/commands_router.py",
		"/Users/maxpm/Code/Opentrons/opentrons/robot-server/tests/runs/router/test_commands_router.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_engine/plugins.py",
		"/Users/maxpm/Code/Opentrons/opentrons/robot-server/tests/integration/fixtures.py",
		"/Users/maxpm/Code/Opentrons/opentrons/robot-server/robot_server/protocols/router.py",
		"/Users/maxpm/Code/Opentrons/opentrons/robot-server/robot_server/service/task_runner.py",
		"/Users/maxpm/Code/Opentrons/opentrons/robot-server/robot_server/protocols/protocol_analyzer.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_runner/python_file_reader.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_runner/legacy_wrappers.py",
		"/Users/maxpm/Code/Opentrons/opentrons/robot-server/tests/protocols/test_protocols_router.py",
		"/Users/maxpm/Code/Opentrons/opentrons/shared-data/module/schemas/2.json",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_engine/commands/aspirate.py",
		"/Users/maxpm/Desktop/aspirate_in_place_test.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/tests/opentrons/protocol_engine/execution/test_run_control_handler.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocols/models/json_protocol.py",
		"/Users/maxpm/Code/Opentrons/opentrons/shared-data/module/definitions/2/thermocyclerModuleV1.json",
		"/Users/maxpm/Code/Opentrons/opentrons/api/tests/opentrons/protocol_runner/test_json_command_translator.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocol_engine/__init__.py",
		"/Users/maxpm/Code/Opentrons/opentrons/shared-data/python/opentrons_shared_data/protocol/models/protocol_schema_v6.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/protocols/api_support/labware_like.py",
		"/Users/maxpm/Code/Opentrons/opentrons/api/src/opentrons/hardware_control/types.py"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 175.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": false,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/main.cpp",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 461,
						"regions":
						{
						},
						"selection":
						[
							[
								210,
								210
							]
						],
						"settings":
						{
							"auto_name": "/*",
							"origPos":
							[
								0.0,
								0.0
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "platformio.sublime-project",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 2068,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"origPos":
							[
								0.0,
								0.0
							],
							"syncScroll": false,
							"syntax": "Packages/JSON/JSON.sublime-syntax",
							"tab_size": 5,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 502.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 136.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 126.0
	},
	"output.find_results":
	{
		"height": 151.0
	},
	"pinned_build_system": "",
	"project": "platformio.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"push.mk",
				"scripts/push.mk"
			],
			[
				"test_auto",
				"robot-server/tests/integration/http_api/protocols/test_auto_deletion.py"
			],
			[
				"test_run_data_",
				"robot-server/tests/runs/test_run_data_manager.py"
			],
			[
				"tables",
				"robot-server/robot_server/persistence/tables.py"
			],
			[
				"deck_cno",
				"api/src/opentrons/protocols/geometry/deck_conflict.py"
			],
			[
				"test_deck_conf",
				"api/tests/opentrons/protocols/geometry/test_deck_conflict.py"
			],
			[
				"translator",
				"api/src/opentrons/protocol_runner/json_command_translator.py"
			],
			[
				"6.json",
				"shared-data/protocol/schemas/6.json"
			],
			[
				"tables.py",
				"robot-server/robot_server/persistence/tables.py"
			],
			[
				"versioning.rst",
				"api/docs/v2/versioning.rst"
			],
			[
				"protocol_api/instrume",
				"api/src/opentrons/protocol_api/instrument_context.py"
			],
			[
				"feature_flags",
				"api/src/opentrons/config/feature_flags.py"
			],
			[
				"labware/schemas",
				"shared-data/labware/schemas/2.json"
			],
			[
				"opentrons_96_tiprack",
				"shared-data/labware/definitions/2/opentrons_96_tiprack_1000ul/1.json"
			],
			[
				"heater_shaker",
				"api/src/opentrons/hardware_control/modules/heater_shaker.py"
			],
			[
				"fixed",
				"shared-data/labware/definitions/1/fixed-trash.json"
			],
			[
				"trash.json",
				"shared-data/labware/definitions/1/fixed-trash.json"
			],
			[
				"test_deck_conflic",
				"api/tests/opentrons/protocols/geometry/test_deck_conflict.py"
			],
			[
				"deck_conf",
				"api/src/opentrons/protocols/geometry/deck_conflict.py"
			],
			[
				"deck_conflict.py",
				"api/src/opentrons/protocols/geometry/deck_conflict.py"
			],
			[
				"test_analys",
				"robot-server/tests/protocols/test_analysis_store.py"
			],
			[
				"persistence/init",
				"robot-server/robot_server/persistence/__init__.py"
			],
			[
				"tables.",
				"robot-server/robot_server/persistence/tables.py"
			],
			[
				"protocol_runner",
				"api/src/opentrons/protocol_runner/protocol_runner.py"
			],
			[
				"test_thermocy",
				"api/tests/opentrons/hardware_control/integration/test_thermocycler.py"
			],
			[
				"simulators",
				"api/src/opentrons/hardware_control/simulator_setup.py"
			],
			[
				"simulations",
				"api/src/opentrons/hardware_control/emulation/simulations.py"
			],
			[
				"test_thermocycler",
				"api/tests/opentrons/hardware_control/integration/test_thermocycler.py"
			],
			[
				"thermocycler.py",
				"api/src/opentrons/hardware_control/modules/thermocycler.py"
			],
			[
				"test_move_to_",
				"api/tests/opentrons/protocol_engine/commands/test_move_to_coordinates.py"
			],
			[
				"move_to_co",
				"api/src/opentrons/protocol_engine/commands/move_to_coordinates.py"
			],
			[
				"test_motion_view",
				"api/tests/opentrons/protocol_engine/state/test_motion_view.py"
			],
			[
				"simplev6.json",
				"shared-data/protocol/fixtures/6/simpleV6.json"
			],
			[
				"test_v6_",
				"robot-server/tests/integration/http_api/protocols/test_v6_json_upload.tavern.yaml"
			],
			[
				"test_persiste",
				"robot-server/tests/integration/http_api/protocols/test_persistence.py"
			],
			[
				"test_persisten",
				"robot-server/tests/integration/http_api/protocols/test_persistence.py"
			],
			[
				"test_pipette_store",
				"api/tests/opentrons/protocol_engine/state/test_pipette_store.py"
			],
			[
				"test_pipette_vi",
				"api/tests/opentrons/protocol_engine/state/test_pipette_view.py"
			],
			[
				"pipetting_comm",
				"api/src/opentrons/protocol_engine/commands/pipetting_common.py"
			],
			[
				"move_to_well",
				"api/src/opentrons/protocol_engine/commands/move_to_well.py"
			],
			[
				"run_router",
				"robot-server/robot_server/runs/router/base_router.py"
			],
			[
				"hs_labware",
				"robot-server/tests/integration/http_api/live/hs_labware.py"
			],
			[
				"robot_client",
				"robot-server/tests/integration/robot_client.py"
			],
			[
				"definitions/thermocycl",
				"shared-data/module/definitions/2/thermocyclerModuleV1.json"
			],
			[
				"protocol_schema",
				"shared-data/python/opentrons_shared_data/protocol/models/protocol_schema_v6.py"
			],
			[
				"protocol_schema_v6",
				"shared-data/python/opentrons_shared_data/protocol/models/protocol_schema_v6.py"
			],
			[
				"testt_json_comma",
				"api/tests/opentrons/protocol_runner/test_json_command_translator.py"
			],
			[
				"test_engage",
				"api/tests/opentrons/protocol_engine/commands/magnetic_module/test_engage.py"
			],
			[
				"test_move_to_coord",
				"api/tests/opentrons/protocol_engine/commands/test_move_to_coordinates.py"
			],
			[
				"test_Wayp",
				"api/tests/opentrons/motion_planning/test_waypoints.py"
			],
			[
				"waypi",
				"api/src/opentrons/motion_planning/waypoints.py"
			],
			[
				"state/commands.",
				"api/src/opentrons/protocol_engine/state/commands.py"
			],
			[
				"move_to_coor",
				"api/src/opentrons/protocol_engine/commands/move_to_coordinates.py"
			],
			[
				"move_gcode_",
				"g-code-testing/g_code_parsing/g_code_functionality_defs/magdeck/move_g_code_functionality_def.py"
			],
			[
				"deck/definitions/3/ot2_",
				"shared-data/deck/definitions/3/ot2_standard.json"
			],
			[
				"json_tran",
				"api/src/opentrons/protocol_runner/json_command_translator.py"
			],
			[
				"json_co",
				"api/src/opentrons/protocol_runner/json_command_translator.py"
			],
			[
				"versioning.py",
				"robot-server/robot_server/versioning.py"
			],
			[
				"labware/schemas/",
				"shared-data/labware/schemas/2.json"
			],
			[
				"labware/.json",
				"shared-data/labware/schemas/2.json"
			],
			[
				"api/src/opentrons/protocols/geometry/module_geometry.py",
				"api/src/opentrons/protocols/geometry/module_geometry.py"
			],
			[
				"5.json",
				"shared-data/protocol/schemas/5.json"
			],
			[
				"command_unions",
				"api/src/opentrons/protocol_engine/commands/command_unions.py"
			],
			[
				"6j",
				"shared-data/protocol/schemas/6.json"
			],
			[
				"test_syn",
				"api/tests/opentrons/protocol_engine/clients/test_sync_client.py"
			],
			[
				"test_dispense",
				"api/tests/opentrons/protocol_engine/commands/test_dispense.py"
			],
			[
				"test_pipetting",
				"api/tests/opentrons/protocol_engine/execution/test_pipetting_handler.py"
			],
			[
				"blow_out",
				"api/src/opentrons/protocol_engine/commands/blow_out.py"
			],
			[
				"pipette_conte",
				"api/src/opentrons/protocol_api_experimental/pipette_context.py"
			],
			[
				"experimental/protoco",
				"api/src/opentrons/protocol_api_experimental/protocol_context.py"
			],
			[
				"protocolcontext",
				"api/src/opentrons/protocol_api/protocol_context.py"
			],
			[
				"protocol_api_exoer",
				"api/src/opentrons/protocol_api_experimental/errors.py"
			],
			[
				"6.js",
				"shared-data/protocol/schemas/6.json"
			],
			[
				"engine_client",
				"api/src/opentrons/protocol_engine/clients/sync_client.py"
			],
			[
				"test_command_Ex",
				"api/tests/opentrons/protocol_engine/execution/test_command_executor.py"
			],
			[
				"aspirate.py",
				"api/src/opentrons/protocol_engine/commands/aspirate.py"
			],
			[
				"engine/ty",
				"api/src/opentrons/protocol_engine/types.py"
			],
			[
				"pipette_context",
				"api/src/opentrons/protocol_api_experimental/pipette_context.py"
			],
			[
				"pipetting.py",
				"api/src/opentrons/protocol_engine/execution/pipetting.py"
			],
			[
				"aspirate_in",
				"api/src/opentrons/protocol_engine/commands/aspirate_in_place.py"
			],
			[
				"run_appl",
				"update-server/otupdate/common/run_application.py"
			],
			[
				"6.",
				"shared-data/protocol/schemas/6.json"
			],
			[
				"test_pipette_context",
				"api/tests/opentrons/protocol_api_experimental/test_pipette_context.py"
			],
			[
				"protocol_api_experimenta/pipette",
				"api/src/opentrons/protocol_api_experimental/pipette_context.py"
			],
			[
				"test_name_S",
				"update-server/tests/common/name_management/test_name_synchronizer.py"
			],
			[
				"avahi.py",
				"update-server/otupdate/common/name_management/avahi.py"
			],
			[
				"openembedded/__main",
				"update-server/otupdate/openembedded/__main__.py"
			],
			[
				"__main",
				"update-server/otupdate/buildroot/__main__.py"
			],
			[
				"test_name_synch",
				"update-server/tests/common/name_management/test_name_synchronizer.py"
			],
			[
				"name_management/__init",
				"update-server/otupdate/common/name_management/__init__.py"
			],
			[
				"test_http_",
				"update-server/tests/common/name_management/test_http_endpoints.py"
			],
			[
				"test_endpoints",
				"update-server/tests/common/name_management/test_http_endpoints.py"
			],
			[
				"common/control.py",
				"update-server/otupdate/common/control.py"
			],
			[
				"name_management/__in",
				"update-server/otupdate/common/name_management/__init__.py"
			],
			[
				"test_control",
				"update-server/tests/openembedded/test_control.py"
			],
			[
				"buildroot/conf",
				"update-server/tests/buildroot/conftest.py"
			],
			[
				"openembedded/main",
				"update-server/otupdate/openembedded/__main__.py"
			],
			[
				"openembedded/in",
				"update-server/otupdate/openembedded/__init__.py"
			],
			[
				"openembe",
				"update-server/otupdate/openembedded/__init__.py"
			],
			[
				"buildroot/main",
				"update-server/otupdate/buildroot/__main__.py"
			],
			[
				"test_name_sync",
				"update-server/tests/common/name_management/test_name_synchronizer.py"
			],
			[
				"name_synch",
				"update-server/otupdate/common/name_management/name_synchronizer.py"
			],
			[
				"test_name_m",
				"update-server/tests/common/name_management/test_name_manager.py"
			],
			[
				"p",
				"api/Pipfile"
			],
			[
				"api/pipfile",
				"api/Pipfile"
			],
			[
				"module_Commands.py",
				"api/src/opentrons/commands/module_commands.py"
			],
			[
				"name_synchr",
				"update-server/otupdate/common/name_management/name_synchronizer.py"
			],
			[
				"buildroot/__init",
				"update-server/tests/buildroot/__init__.py"
			],
			[
				"openembedded/init",
				"update-server/otupdate/openembedded/__init__.py"
			],
			[
				"buildroot/init",
				"update-server/otupdate/buildroot/__init__.py"
			],
			[
				"buildroot/__init__p",
				"update-server/otupdate/buildroot/__init__.py"
			],
			[
				"buildroot/main.py",
				"update-server/otupdate/buildroot/__main__.py"
			],
			[
				".mk",
				"scripts/push.mk"
			],
			[
				"name_manager",
				"update-server/otupdate/common/name_management/name_manager.py"
			],
			[
				"name",
				"update-server/otupdate/common/name_management/name_manager.py"
			],
			[
				"name_",
				"update-server/otupdate/common/name_management/name_manager.py"
			],
			[
				"test_name_",
				"update-server/tests/common/name_management/test_name_manager.py"
			],
			[
				"test_http_end",
				"update-server/tests/common/name_management/test_http_endpoints.py"
			],
			[
				"openembedded/",
				"update-server/otupdate/openembedded/__init__.py"
			],
			[
				"openembedded",
				"update-server/otupdate/openembedded/__init__.py"
			],
			[
				"buildroot/",
				"update-server/otupdate/buildroot/__init__.py"
			],
			[
				"buildroot/init.py",
				"update-server/otupdate/buildroot/__init__.py"
			],
			[
				"update",
				"app-shell/src/buildroot/update.ts"
			],
			[
				"test_run.tavern",
				"robot-server/tests/integration/http_api/runs/test_run_status.tavern.yaml"
			],
			[
				"geometry/deck.py",
				"api/src/opentrons/protocols/geometry/deck.py"
			],
			[
				"common/test_update",
				"update-server/tests/common/test_update.py"
			],
			[
				"common/conftest",
				"update-server/tests/common/conftest.py"
			],
			[
				"cntrol.py",
				"update-server/otupdate/common/control.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Code/Opentrons/ot2-factory-tools/ot2-factory-tools.sublime-workspace"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 305.0,
		"last_filter": "Run",
		"selected_items":
		[
			[
				"Run",
				"Run"
			],
			[
				"Heatershaker",
				"HeaterShakerMovementFlagger"
			],
			[
				"HeatershakerMoveme",
				"HeaterShakerMovementFlagger"
			],
			[
				"DeckSlotLoc",
				"DeckSlotLocation"
			],
			[
				"get_locati",
				"get_location"
			],
			[
				"SimpleEmpty",
				"SimpleEmptyBody"
			],
			[
				"create_run",
				"create_run"
			],
			[
				"delete_run",
				"delete_run"
			],
			[
				"plan_check_pick",
				"plan_check_pick_up_tip"
			],
			[
				"runstore",
				"RunStore"
			],
			[
				"post_action",
				"post_run_action"
			],
			[
				"handle_act",
				"handle_action"
			],
			[
				"HardwareEventForwa",
				"HardwareEventForwarder"
			],
			[
				"SESSIONMANA",
				"SessionManager"
			],
			[
				"APIVErsion",
				"APIVersion"
			],
			[
				"APIVersionErro",
				"APIVersionError"
			],
			[
				"requiers",
				"requires_version"
			],
			[
				"validate_tipr",
				"validate_tiprack"
			],
			[
				"get_next_",
				"get_next_queued"
			],
			[
				"CommandStat",
				"CommandStatus"
			],
			[
				"BaseComma",
				"BaseCommand"
			],
			[
				"get_next_queued",
				"get_next_queued"
			],
			[
				"QueueWorker",
				"QueueWorker"
			],
			[
				"AbstractLabware",
				"AbstractLabware"
			],
			[
				"DeckItem",
				"DeckItem"
			],
			[
				"ModuleGeom",
				"ModuleGeometry"
			],
			[
				"HeaterShakerGeo",
				"HeaterShakerGeometry"
			],
			[
				"ProtocolStore",
				"ProtocolStore"
			],
			[
				"LoadModul",
				"LoadModule"
			],
			[
				"get_all",
				"get_all"
			],
			[
				"PydanticR",
				"PydanticResponse"
			],
			[
				"StateSumm",
				"StateSummary"
			],
			[
				"RunStore",
				"RunStore"
			],
			[
				"RunDataMan",
				"RunDataManager"
			],
			[
				"get_run",
				"get_runs"
			],
			[
				"ProtocolEngine",
				"ProtocolEngine"
			],
			[
				"BaseCommand",
				"BaseCommand"
			],
			[
				"Runner",
				"protocol_runner"
			],
			[
				"CommandState",
				"CommandState"
			],
			[
				"Temperature",
				"Temperature"
			],
			[
				"ThermocyclerListener",
				"ThermocyclerListener"
			],
			[
				"Abstra",
				"AbstractModule"
			],
			[
				"Execution",
				"ExecutionManager"
			],
			[
				"Poller",
				"Poller"
			],
			[
				"set_temp",
				"set_temperature"
			],
			[
				"ThermocyclerConte",
				"ThermocyclerContext"
			],
			[
				"wait_for_is",
				"wait_for_is_running"
			],
			[
				"TemperatureModelSettings",
				"TemperatureModelSettings"
			],
			[
				"Settings",
				"Settings"
			],
			[
				"ExecutionMa",
				"ExecutionManager"
			],
			[
				"abstract",
				"AbstractModule"
			],
			[
				"ThermocyclerStep",
				"ThermocyclerSetLidTempCommandPayload"
			],
			[
				"run_app",
				"_run_app"
			],
			[
				"emulation",
				"emulation_app"
			],
			[
				"set_target_block_",
				"set_target_block_temperature"
			],
			[
				"ModuleStatusCl",
				"ModuleStatusClient"
			],
			[
				"ThermocyclerEmul",
				"ThermocyclerEmulator"
			],
			[
				"emulator_sett",
				"emulator_settings"
			],
			[
				"WAIT_FOR_I",
				"wait_for_is_running"
			],
			[
				"WAIT_FOR_IS_",
				"wait_for_is_running"
			],
			[
				"wait_for_is_r",
				"wait_for_is_running"
			],
			[
				"wait_next",
				"wait_next_poll"
			],
			[
				"AbstractModu",
				"AbstractModule"
			],
			[
				"WellOffset",
				"WellOffset"
			],
			[
				"WellOrigin",
				"WellOrigin"
			],
			[
				"WellLocation",
				"WellLocation"
			],
			[
				"movetowellparam",
				"MoveToWellParams"
			],
			[
				"LabwareLoc",
				"LabwareLocation"
			],
			[
				"loadlabwarepa",
				"LoadLabwareParams"
			],
			[
				"loadpipettepara",
				"LoadPipetteParams"
			],
			[
				"QueueStatus",
				"QueueStatus"
			],
			[
				"WellLocati",
				"WellLocationMixin"
			],
			[
				"DropTipParams",
				"DropTipParams"
			],
			[
				"get_is_door",
				"get_is_door_blocking"
			],
			[
				"get_st",
				"get_state_summary"
			],
			[
				"get_movement",
				"get_movement_waypoints_to_coords"
			],
			[
				"to_hw_",
				"to_hw_mount"
			],
			[
				"Mount",
				"MountType"
			],
			[
				"get_way",
				"get_waypoints"
			],
			[
				"get_pipe",
				"get_pipette_location"
			],
			[
				"get_pipette",
				"get_pipette_location"
			],
			[
				"get_well_posi",
				"get_well_position"
			],
			[
				"get_well_pos",
				"get_well_position"
			],
			[
				"deletionpla",
				"RunDeletionPlanner"
			],
			[
				"autodelet",
				"RunAutoDeleter"
			],
			[
				"RunResour",
				"RunResource"
			],
			[
				"get_state_s",
				"get_state_summary"
			],
			[
				"get_runs",
				"get_runs"
			],
			[
				"get_all_runs",
				"test_get_all_runs"
			],
			[
				"create_move_tl",
				"create_move_to_well_command"
			],
			[
				"create_load_",
				"create_load_labware_command"
			],
			[
				"motionview",
				"MotionView"
			],
			[
				"movementhand",
				"MovementHandler"
			],
			[
				"HomeParams",
				"HomeParams"
			],
			[
				"welllocation",
				"WellLocationMixin"
			],
			[
				"droptippar",
				"DropTipParams"
			],
			[
				"droptipparam",
				"DropTipParams"
			],
			[
				"move_to_well",
				"move_to_well"
			],
			[
				"movetowell",
				"MoveToWellImplementation"
			],
			[
				"test_get_current_run_eng",
				"test_get_current_run_engine_no_run"
			],
			[
				"protocolrunner",
				"ProtocolRunner"
			],
			[
				"actiondisp",
				"ActionDispatcher"
			],
			[
				"pluginstar",
				"PluginStarter"
			],
			[
				"handle_action",
				"handle_action"
			],
			[
				"has",
				"has"
			],
			[
				"legacycomma",
				"LegacyCommandMapper"
			],
			[
				"delete_Run",
				"delete_all_runs"
			],
			[
				"post_run",
				"post_run"
			],
			[
				"labwarelocat",
				"LabwareLocation"
			],
			[
				"location",
				"Location"
			],
			[
				"loadlabwarepara",
				"LoadLabwareParams"
			],
			[
				"commandstore",
				"CommandStore"
			],
			[
				"legacyexec",
				"LegacyExecutor"
			],
			[
				"run",
				"run"
			],
			[
				"Analyze",
				"analyze"
			],
			[
				"TaskRunner",
				"TaskRunner"
			],
			[
				"task_runner",
				"task_runner"
			],
			[
				"legacycommand",
				"LegacyCommandMapper"
			],
			[
				"flowratemixin",
				"FlowRateMixin"
			],
			[
				"FlowRate",
				"FlowRate"
			],
			[
				"aspirateparams",
				"AspirateParams"
			],
			[
				"flowrate",
				"FlowRate"
			],
			[
				"dodge_ther",
				"should_dodge_thermocycler"
			],
			[
				"get_overall",
				"get_overall_height"
			],
			[
				"get_highest",
				"_get_highest_z_from_labware_data"
			],
			[
				"pipetteview",
				"PipetteView"
			],
			[
				"get_pipette_l",
				"get_pipette_location"
			],
			[
				"pipettinghan",
				"PipettingHandler"
			]
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 451.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
